name: CI netCoreMsal

env:
  artifacts_path: netCoreMsal\bin\release\artifacts
  release_path: netCoreMsal\bin\release\netcoreapp3.0\win-x64\publish
  project_name: netCoreMsal
  github_owner: ${{ github.event.repository.owner.name }}

on:
  pull_request:
    types: [closed, opened]
    branches:
      - master
      - jagilber
    paths:
      - "netCoreMsal/**"

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: environment
        shell: cmd
        run: |
          set 
          tree /a /f .

      - name: dotnet publish
        shell: cmd
        run: dotnet -d publish %project_name%\%project_name%.csproj -c Release

      - name: build output
        shell: cmd
        run: dir %release_path% /s

      - name: copy artifacts
        shell: cmd
        run: |
          md %artifacts_path%
          copy %release_path%\*.exe %artifacts_path%

      - name: artifacts output
        shell: cmd
        run: dir %artifacts_path% /s

      - name: upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Release
          path: ${{ env.artifacts_path }}

  release:
    if: success() && github.event.pull_request.merged == true && github.event.action == 'closed'
    needs: build
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: environment
        shell: cmd
        run: set

      - name: download artifact
        uses: actions/download-artifact@master
        with:
          name: Release
          path: ${{ env.release_path }}

      - name: release output
        shell: cmd
        run: dir %release_path% /s

      - name: prepare release
        shell: powershell
        run: |
          md "$($env:release_path)_upload"
          copy "$($env:release_path)\*.exe" "$($env:release_path)_upload"
          compress-archive -path "$($env:release_path)_upload\*" -destinationPath "$($env:release_path)\$($env:project_name).zip" -force

      - name: create release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.project_name }}-${{ github.sha }}
          release_name: ${{ env.project_name }}
          draft: false
          prerelease: false

      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\${{ env.release_path }}\${{ env.project_name }}.zip
          asset_name: ${{ env.project_name }}.zip
          asset_content_type: application/zip
